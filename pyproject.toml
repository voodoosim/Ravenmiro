[tool.pylint.messages_control]
disable = [
    "C0301",  # line-too-long
    "C0114",  # missing-module-docstring
    "C0115",  # missing-class-docstring
    "C0116",  # missing-function-docstring
    "C0103",  # invalid-name
    "C0304",  # missing-final-newline
    "C0305",  # trailing-newlines
    "C0413",  # wrong-import-position
    "W0291",  # trailing-whitespace
    "W0611",  # unused-import
    "W0612",  # unused-variable
    "W0613",  # unused-argument
    "W0621",  # redefined-outer-name
    "W0622",  # redefined-builtin
    "W0703",  # broad-except
    "W1203",  # logging-fstring-interpolation
    "R0901",  # too-many-ancestors
    "R0902",  # too-many-instance-attributes
    "R0903",  # too-few-public-methods
    "R0904",  # too-many-public-methods
    "R0911",  # too-many-return-statements
    "R0912",  # too-many-branches
    "R0913",  # too-many-arguments
    "R0914",  # too-many-locals
    "R0915",  # too-many-statements
    "R1705",  # no-else-return
    "R1710",  # inconsistent-return-statements
    "E1101",  # no-member
    "W0105",  # pointless-string-statement
    "W0201",  # attribute-defined-outside-init
    "W1514",  # unspecified-encoding
    "R1714",  # consider-using-in
    "R1722",  # consider-using-sys-exit
    "W1309",  # f-string-without-interpolation
]

[tool.pylint.basic]
good-names = ["i", "j", "k", "ex", "Run", "_", "id", "e", "f"]

[tool.pylint.format]
max-line-length = 150

[tool.mypy]
python_version = "3.11"
warn_return_any = false
warn_unused_configs = true
ignore_missing_imports = true
check_untyped_defs = false
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = "telethon.*"
ignore_missing_imports = true
ignore_errors = true

[[tool.mypy.overrides]]
module = "telethon"
ignore_missing_imports = true
ignore_errors = true

[tool.pyright]
pythonVersion = "3.11"
typeCheckingMode = "basic"
reportMissingImports = false
reportMissingModuleSource = false
reportGeneralTypeIssues = false
reportOptionalMemberAccess = false
reportOptionalCall = false
reportOptionalIterable = false
reportOptionalContextManager = false
reportOptionalOperand = false
reportTypedDictNotRequiredAccess = false
reportPrivateImportUsage = false
reportUnboundVariable = false
reportUndefinedVariable = false
reportAttributeAccessIssue = false
reportArgumentType = false
reportAssignmentType = false
reportCallIssue = false
reportIndexIssue = false
reportOperatorIssue = false
reportRedeclaration = false
reportReturnType = false
reportUnusedVariable = "none"
reportUnusedImport = "none"
reportUnusedFunction = "none"
reportUnusedClass = "none"
reportUnnecessaryIsInstance = false
reportUnnecessaryComparison = false
reportUnnecessaryContains = false
reportUnnecessaryTypeIgnoreComment = false
reportMissingTypeStubs = false
reportImportCycles = false
reportUnusedExpression = false
reportMatchNotExhaustive = false
reportShadowedImports = false

[tool.ruff]
line-length = 150
target-version = "py311"

[tool.ruff.lint]
select = ["F", "E", "W", "I", "N", "UP", "B", "A", "C4", "SIM", "RUF"]
ignore = [
    "E501",  # line too long
    "E741",  # ambiguous variable name
    "F401",  # imported but unused
    "F841",  # local variable assigned but never used
    "W291",  # trailing whitespace
    "W292",  # no newline at end of file
    "W293",  # blank line contains whitespace
    "B008",  # do not perform function calls in argument defaults
    "B904",  # raise without from inside except
    "C408",  # unnecessary dict call
    "SIM105",  # use contextlib.suppress
    "SIM108",  # use ternary operator
    "RUF001",  # ambiguous unicode character
    "RUF002",  # ambiguous unicode character
    "RUF003",  # ambiguous unicode character
    "RUF006",  # asyncio dangling task
    "RUF010",  # use explicit conversion flag
    "UP004",  # useless object inheritance
    "A003",  # class attribute shadowing python builtin
    "I001",  # import block is un-sorted
    "F541",  # f-string without placeholders
]